{"total_count": 12, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25", "repository_url": "https://api.github.com/repos/tommitytom/RetroPlug", "labels_url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25/comments", "events_url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25/events", "html_url": "https://github.com/tommitytom/RetroPlug/issues/25", "id": 1100788740, "node_id": "I_kwDOCwx-ps5BnLQE", "number": 25, "title": "Using ZIP format for plugin chunk data is problematic", "user": {"login": "sagamusix", "id": 875883, "node_id": "MDQ6VXNlcjg3NTg4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/875883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagamusix", "html_url": "https://github.com/sagamusix", "followers_url": "https://api.github.com/users/sagamusix/followers", "following_url": "https://api.github.com/users/sagamusix/following{/other_user}", "gists_url": "https://api.github.com/users/sagamusix/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagamusix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagamusix/subscriptions", "organizations_url": "https://api.github.com/users/sagamusix/orgs", "repos_url": "https://api.github.com/users/sagamusix/repos", "events_url": "https://api.github.com/users/sagamusix/events{/privacy}", "received_events_url": "https://api.github.com/users/sagamusix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-01-12T21:05:15Z", "updated_at": "2022-01-13T21:50:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I'm developing [OpenMPT](https://openmpt.org/), and one of our users [had trouble using this VST plugin](https://bugs.openmpt.org/view.php?id=1548) in OpenMPT: After using it in a track and then trying to reload the track, the whole track failed load. This happens because OpenMPT can load zipped module files, so it first tries to read a file as a ZIP file, and if successful it tries to load a file from that ZIP file as a module. If the file wasn't a ZIP file, it will directly try to load it as a module instead.\r\n\r\nWhat's the problem? Well, ZIP is a peculiar format. Some background information on that, in case you weren't aware: Most people would probably expect that a ZIP file must start with the \"PK\" magic bytes, but they don't really need to be at the start of the file. To read a ZIP file, you start by finding the central directory, which is placed towards the *end* of the file. It may not be at the exact end, because a comment text up to 64KB in length may follow. So a typical implementation will seek backwards within the last 64KB of the file to find the central directory (and it seems like many if not all ZIP libraries don't check if the declared length of that comment is actually identical to the number of byte past the end of the central directory). This mechanism is also the reason why you can open a self-extracting ZIP file (i.e. an EXE with embedded ZIP) in pretty much any software that can handle ZIP files - it will simply not care that there's an EXE stub in front of the ZIP.\r\n\r\nAs a consequence of this design, any music project file of any DAW where the plugin chunk dump by this plugin is placed close to the last 64KB of the project file is at the same time by definition also a valid ZIP file! And as a result of that, any software that, like OpenMPT, can open both regular ZIP files and also its own music project files will end up in a situation where a file is technically both a ZIP file and a music project file. I will try to find a workaround for OpenMPT, but as other DAWs could still encounter similar issues.\r\n\r\nAs a conclusion, I think it would make sense if RetroPlug didn't give a complete ZIP file as plugin chunk data to the host. I could think of several workarounds:\r\n- XOR-\"encrypt\" the chunk data. Not very nice but it would avoid being detected as a ZIP file.\r\n- Use a different standard archival container format that cannot be placed in the middle of another file, for example tar.gz\r\n- Just don't use a container format at all and write your own (e.g. zero-terminated filename followed by compressed and uncompressed size fields, followed by zlib-compressed data).\r\n- For backwards compatibility, the plugin should of course still try to load the plugin chunk as a ZIP file.", "reactions": {"url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/tommitytom/RetroPlug/issues/25/timeline", "performed_via_github_app": null, "state_reason": null, "score": 1.0}]}