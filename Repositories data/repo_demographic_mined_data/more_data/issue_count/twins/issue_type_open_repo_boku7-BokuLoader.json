{"total_count": 1, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/boku7/BokuLoader/issues/26", "repository_url": "https://api.github.com/repos/boku7/BokuLoader", "labels_url": "https://api.github.com/repos/boku7/BokuLoader/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/boku7/BokuLoader/issues/26/comments", "events_url": "https://api.github.com/repos/boku7/BokuLoader/issues/26/events", "html_url": "https://github.com/boku7/BokuLoader/issues/26", "id": 1744059301, "node_id": "I_kwDOF6FO785n9Dul", "number": 26, "title": "PrependBytes functionality issue", "user": {"login": "Nightbringer21", "id": 7713506, "node_id": "MDQ6VXNlcjc3MTM1MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/7713506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nightbringer21", "html_url": "https://github.com/Nightbringer21", "followers_url": "https://api.github.com/users/Nightbringer21/followers", "following_url": "https://api.github.com/users/Nightbringer21/following{/other_user}", "gists_url": "https://api.github.com/users/Nightbringer21/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nightbringer21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nightbringer21/subscriptions", "organizations_url": "https://api.github.com/users/Nightbringer21/orgs", "repos_url": "https://api.github.com/users/Nightbringer21/repos", "events_url": "https://api.github.com/users/Nightbringer21/events{/privacy}", "received_events_url": "https://api.github.com/users/Nightbringer21/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-06T15:02:33Z", "updated_at": "2023-09-03T18:56:37Z", "closed_at": null, "author_association": "NONE", "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "active_lock_reason": null, "body": "Hi,\r\n\r\nThere seems to be two issues with the way the PrependBytes functionality works within the aggressor script:\r\n\r\n- The prependBytes call is happening before the modification of the MZ header. As a result, the first 4 bytes prepended will always be overwritten\r\n- When calling prependBytes, it seems to be breaking something within the way BokuLoader works, which results to the original reflective loader being loaded. For this one, not entirely sure why it happens as the code running after it doesn't seem to affect it.\r\n\r\n## How to replicate the issue:\r\n\r\n1. Edit BokuLoader.cna\r\n2. Go to line 1032 and uncomment the call to prependBytes\r\n3. Go to line 431 and add 4 characters at the start of the $Nops variable (e.g. \"AAAAPS[X\"). This is due to the fact that they will be overwritten by the magic_mz\r\n4. Compile and load the Agressor Script on CS\r\n5. Create a Payload with the prepended bytes\r\n6. Check the binary created for the existence of the original reflective loader (simplest way is to run the YARA rule for the Windows_Trojan_Cobaltsrike indicator by Elastic:\r\nhttps://github.com/elastic/protections-artifacts/blob/main/yara/rules/Windows_Trojan_CobaltStrike.yar\r\n\r\n### Example output before and after uncommenting prepend:\r\n\r\n![image](https://github.com/boku7/BokuLoader/assets/7713506/f1e2bb0f-5ca3-4bfb-9a4a-cf7c0c9d766c)\r\n", "reactions": {"url": "https://api.github.com/repos/boku7/BokuLoader/issues/26/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/boku7/BokuLoader/issues/26/timeline", "performed_via_github_app": null, "state_reason": null, "score": 1.0}]}