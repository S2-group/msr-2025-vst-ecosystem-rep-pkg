{"total_count": 6, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15", "repository_url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4", "labels_url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15/comments", "events_url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15/events", "html_url": "https://github.com/GaudiLabs/OpenThereminV4/issues/15", "id": 2504616665, "node_id": "I_kwDOFOf-ls6VSWrZ", "number": 15, "title": "tonal distribution", "user": {"login": "twentyfortysix", "id": 747153, "node_id": "MDQ6VXNlcjc0NzE1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/747153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twentyfortysix", "html_url": "https://github.com/twentyfortysix", "followers_url": "https://api.github.com/users/twentyfortysix/followers", "following_url": "https://api.github.com/users/twentyfortysix/following{/other_user}", "gists_url": "https://api.github.com/users/twentyfortysix/gists{/gist_id}", "starred_url": "https://api.github.com/users/twentyfortysix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twentyfortysix/subscriptions", "organizations_url": "https://api.github.com/users/twentyfortysix/orgs", "repos_url": "https://api.github.com/users/twentyfortysix/repos", "events_url": "https://api.github.com/users/twentyfortysix/events{/privacy}", "received_events_url": "https://api.github.com/users/twentyfortysix/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2024-09-04T08:11:47Z", "updated_at": "2024-09-05T10:20:51Z", "closed_at": "2024-09-05T07:02:06Z", "author_association": "NONE", "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "active_lock_reason": null, "body": "Hi, sorry for the question in the issues.. but might be something useful. \r\n\r\nIs it possible to define the tonal distribution across the pitch range?\r\n\r\nscenario:\r\nThe lower tones are bigger therefore has wider hand movement range while the high tones are getting closer and closer and are harder to play as the distance between them is getting smaller.\r\nWhat would be useful would be to have a chance to alter the values so that the lower tones are closer than are by default and the higher tones are further form one another than are by default.\r\nIt might be on a software side as function that would adjust the incoming pitch value by a factor value, the value distribution\r\n\r\npython example\r\n```\r\nimport numpy as np\r\n\r\ndef exponential_distribution(arr, factor=1.0):\r\n    \"\"\"\r\n    Adjust the distribution of numbers in an array to follow an exponential curve.\r\n    \r\n    Parameters:\r\n    arr (list of float): The input array of numbers.\r\n    factor (float): The factor controlling the steepness of the exponential curve.\r\n                    Values > 1.0 make the curve steeper, values < 1.0 make it shallower.\r\n    \r\n    Returns:\r\n    list of float: The adjusted array of numbers following an exponential distribution.\r\n    \"\"\"\r\n    if len(arr) < 2:\r\n        return arr  # No adjustment needed for arrays with less than 2 elements\r\n    \r\n    # Normalize the input array to the range [0, 1]\r\n    normalized_arr = np.linspace(0, 1, len(arr))\r\n    \r\n    # Apply the exponential transformation\r\n    exp_arr = (np.exp(normalized_arr * factor) - 1) / (np.exp(factor) - 1)\r\n    \r\n    # Scale the exponential array back to the original range\r\n    min_value = arr[0]\r\n    max_value = arr[-1]\r\n    adjusted_arr = min_value + exp_arr * (max_value - min_value)\r\n    \r\n    return adjusted_arr.tolist()\r\n\r\n# Example usage\r\noriginal_array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\nfactor = 2.0  # Increase the steepness of the exponential curve\r\nadjusted_array = exponential_distribution(original_array, factor)\r\nprint(\"Original array:\", original_array)\r\nprint(\"Adjusted array:\", adjusted_array)\r\n```\r\n\r\nresult\r\n```\r\nOriginal array: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\nAdjusted array: [0.0, 0.3505431453935727, 0.7883185560546282, 1.3350338825354344, 2.017798699676874, 2.870468769358103, 3.935324821511089, 5.265169097891943, 6.9259436183985335, 9.0]\r\n\r\n```\r\n\r\nsee the value distribution changes across the range, and that what is needed.\r\nThe Open theremin would have either a function with a factor value we can change as a number or the better a knob that would allow us to alter the distribution.\r\n\r\n\r\nAs that is the killer feature the PRO Moog theremins used to have, which makes them way more playable as the high notes thanks to the altered pitch value were easier to be played. \r\n", "reactions": {"url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/GaudiLabs/OpenThereminV4/issues/15/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}]}