{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/septag/sx/issues/22", "repository_url": "https://api.github.com/repos/septag/sx", "labels_url": "https://api.github.com/repos/septag/sx/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/septag/sx/issues/22/comments", "events_url": "https://api.github.com/repos/septag/sx/issues/22/events", "html_url": "https://github.com/septag/sx/issues/22", "id": 737083961, "node_id": "MDU6SXNzdWU3MzcwODM5NjE=", "number": 22, "title": "Cross-compiling from Linux to Windows fails", "user": {"login": "rivten", "id": 3672470, "node_id": "MDQ6VXNlcjM2NzI0NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3672470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rivten", "html_url": "https://github.com/rivten", "followers_url": "https://api.github.com/users/rivten/followers", "following_url": "https://api.github.com/users/rivten/following{/other_user}", "gists_url": "https://api.github.com/users/rivten/gists{/gist_id}", "starred_url": "https://api.github.com/users/rivten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rivten/subscriptions", "organizations_url": "https://api.github.com/users/rivten/orgs", "repos_url": "https://api.github.com/users/rivten/repos", "events_url": "https://api.github.com/users/rivten/events{/privacy}", "received_events_url": "https://api.github.com/users/rivten/received_events", "type": "User", "user_view_type": "public", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-05T16:32:29Z", "updated_at": "2020-11-07T15:59:55Z", "closed_at": "2020-11-07T14:14:51Z", "author_association": "NONE", "sub_issues_summary": {"total": 0, "completed": 0, "percent_completed": 0}, "active_lock_reason": null, "body": "I was trying to produce a win32 executable of my app using Linux.\r\nHere's the CMake cross-compilation toolchain file I'm using : \r\n\r\n```\r\nset(CMAKE_SYSTEM_NAME Windows)\r\nset(CMAKE_SYSTEM_PROCESSOR x86_64)\r\n\r\nset(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc)\r\nset(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)\r\n\r\ninclude_directories(\"/usr/x86_64-w64-mingw32/include/\")\r\n```\r\n\r\nWhen compiling from Manjaro with this, I'm hitting several issues : \r\n\r\n- In `sx.h`, I probably need to add an include to `string.h` because of `memmove` that is not found.\r\n\r\n- https://github.com/septag/sx/blob/master/src/threads.c#L689 this codes probably needs to be surrounded by `#if SX_COMPILER_MSVC` as it seems only msvc defines `__try`\r\n\r\n- https://github.com/septag/sx/blob/master/src/os.c#L18 I think `Psapi.h` should be renamed to `psapi.h`. Maybe gcc is case-sensitive when msvc isn't ?\r\n\r\n- Also all the `alloca.h `are not found with this setup. But that's maybe because I need to add the compat/msvc as include directory ?\r\n\r\n- Finally, there's a weird issue that prevents final linking. \r\n`/bin/x86_64-w64-mingw32-gcc -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DBOOST_CONTEXT_EXPORT=\"\" @CMakeFiles/sx.dir/includes_ASM.rsp -nostdlib -Wno-deprecated-declarations -o CMakeFiles/sx.dir/asm/ontop_x86_64_ms_pe_masm.asm.obj -c /home/hugo/dev/experiments/sx/asm/ontop_x86_64_ms_pe_masm.asm\r\nx86_64-w64-mingw32-gcc: warning: /home/hugo/dev/experiments/sx/asm/ontop_x86_64_ms_pe_masm.asm: linker input file unused because linking not done`\r\n\r\n(EDIT: ok after some investigation, I think that the asm-error is because the cross-compiler `x86_64-w64-mingw32-gcc` doesn't know that an `asm` extension is for assembly files... I tried hacking by changing manually the extension to `.S` with the CMake, but now there's instruction error... Blurhhhh)\r\n\r\nBecause of the warning, no object file is produced and the final linking step fails. I'm still investigating why, but already [found this](https://stackoverflow.com/questions/2395158/linker-error-linker-input-file-unused-because-linking-not-done-undefined-ref). Not sure if a toolchain to compile asm is missing of something.\r\n\r\nSince I'm hitting linker step, I'm guessing that after the last resolution, sx could compile.\r\nDo we want to support cross-compilation like that ?", "reactions": {"url": "https://api.github.com/repos/septag/sx/issues/22/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/septag/sx/issues/22/timeline", "performed_via_github_app": null, "state_reason": "completed", "score": 1.0}]}