{"total_count": 4, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7", "repository_url": "https://api.github.com/repos/dazfuller/PyUnitTestTask", "labels_url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7/comments", "events_url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7/events", "html_url": "https://github.com/dazfuller/PyUnitTestTask/issues/7", "id": 569669129, "node_id": "MDU6SXNzdWU1Njk2NjkxMjk=", "number": 7, "title": "Task does nothing with invalid unit tests", "user": {"login": "VenoMpie", "id": 10866838, "node_id": "MDQ6VXNlcjEwODY2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/10866838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VenoMpie", "html_url": "https://github.com/VenoMpie", "followers_url": "https://api.github.com/users/VenoMpie/followers", "following_url": "https://api.github.com/users/VenoMpie/following{/other_user}", "gists_url": "https://api.github.com/users/VenoMpie/gists{/gist_id}", "starred_url": "https://api.github.com/users/VenoMpie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VenoMpie/subscriptions", "organizations_url": "https://api.github.com/users/VenoMpie/orgs", "repos_url": "https://api.github.com/users/VenoMpie/repos", "events_url": "https://api.github.com/users/VenoMpie/events{/privacy}", "received_events_url": "https://api.github.com/users/VenoMpie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-24T06:59:37Z", "updated_at": "2020-02-24T06:59:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The VSTS task doesn't fail when there are invalid unit tests.\r\nWhen running the command coverage run -m xmlrunner discover -s . -p test_*.py manually, coverage outputs the failed xml, etc. but the task doesn't output anything to console on this step and appears as if everything is fine while it's not. I see in the code that it's set to silent so I'm assuming this is intended behavior? Can't there be an option passed in to allow failing the task whenever tests are not passing. I don't want the build process to even continue when there are failures.\r\n\r\ncoverage run -m xmlrunner discover -s . -p test_*.py output\r\n======================================================================\r\nFAIL [0.000s]: test_test (tests.misc.test_fail.TestUnitTestDiscovery)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\agent\\_work\\6\\s\\src\\tests\\misc\\test_fail.py\", line 6, in test_test\r\n    self.assertTrue(False)\r\nAssertionError: False is not true\r\n\r\nRunner Code\r\n\r\n// Execute the unit tests\r\n    let unittestTool = tl.tool(coverageToolPath).arg(['run', '-m', 'xmlrunner', 'discover', '-s', '.', '-p', testFilePattern]);\r\n    unittestTool.execSync(toolRunOptions);\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/dazfuller/PyUnitTestTask/issues/7/timeline", "performed_via_github_app": null, "state_reason": null, "score": 1.0}]}